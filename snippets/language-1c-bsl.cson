".source.bsl":
  "Если":
    prefix: "Если"
    body: '''
      Если ${1:Условие} Тогда
      	$0
      КонецЕсли;
    '''
    description: "Если"
  "ЕслиИначе":
    prefix: "Если2"
    body: '''
      Если ${1:Условие} Тогда
      	$0
      Иначе
      КонецЕсли;
    '''
    description: "ЕслиИначе"
  "Пока":
    prefix: "Пока"
    body: '''
      Пока ${1:Условие} Цикл
      	$0
      КонецЦикла;
    '''
    description: "Пока"
  "Для":
    prefix: "Для"
    body: '''
      Для ${1:Счетчик} По ${2:Ограничение} Цикл
      	$0
      КонецЦикла;
    '''
    description: "Для"
  "Для каждого":
    prefix: "ДляКаждого"
    body: '''
      Для каждого ${1:Переменная} Из ${2:Коллекция} Цикл
      	$0
      КонецЦикла;
    '''
    description: "Для каждого"
  "Процедура":
    prefix: "Процедура"
    body: '''
      Процедура ${1:ИмяПроцедуры}()
      	$0
      КонецПроцедуры
    '''
    description: "Процедура"
  "Процедура (с заголовком)":
    prefix: "Процедура2"
    body: '''
      // <Описание процедуры>
      //
      // Параметры:
      //  <Параметр1>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //  <Параметр2>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //
      Процедура ${1:ИмяПроцедуры}()
      	$0
      КонецПроцедуры // ${1:ИмяПроцедуры}()
    '''
    description: "Процедура (с заголовком)"
  "Процедура модуля формы":
    prefix: "Процедура3"
    body: '''
      // <Описание процедуры>
      //
      // Параметры:
      //  <Параметр1>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //  <Параметр2>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //
      &${1:ВыберитеДирективуКомпиляции}
      Процедура ${2:ИмяПроцедуры}()
      	$0
      КонецПроцедуры // ${2:ИмяПроцедуры}()
    '''
    description: "Процедура модуля формы"
  "Процедура модуля команды":
    prefix: "Процедура4"
    body: '''
      // <Описание процедуры>
      //
      // Параметры:
      //  <Параметр1>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //  <Параметр2>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //
      &${1:ВыберитеДирективуКомпиляции}
      Процедура ${2:ИмяПроцедуры}()
      	$0
      КонецПроцедуры // ${2:ИмяПроцедуры}()
    '''
    description: "Процедура модуля команды"
  "Функция":
    prefix: "Функция"
    body: '''
      Функция ${1:ИмяФункции}()
      	$0
      КонецФункции // ${1:ИмяФункции}()
    '''
    description: "Функция"
  "Функция (с заголовком)":
    prefix: "Функция2"
    body: '''
      // <Описание функции>
      //
      // Параметры:
      //  <Параметр1>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //  <Параметр2>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //
      // Возвращаемое значение:
      //   <Тип.Вид>   - <описание возвращаемого значения>
      //
      Функция ${1:ИмяФункции}()
      	$0
      КонецФункции // ${1:ИмяФункции}()
    '''
    description: "Функция (с заголовком)"
  "Функция модуля формы":
    prefix: "Функция3"
    body: '''
      // <Описание функции>
      //
      // Параметры:
      //  <Параметр1>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //  <Параметр2>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //
      // Возвращаемое значение:
      //   <Тип.Вид>   - <описание возвращаемого значения>
      //
      &${1:ВыберитеДирективуКомпиляции}
      Функция ${2:ИмяФункции}()
      	$0
      КонецФункции // ${2:ИмяФункции}()
    '''
    description: "Функция модуля формы"
  "Функция модуля команды":
    prefix: "Функция4"
    body: '''
      // <Описание функции>
      //
      // Параметры:
      //  <Параметр1>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //  <Параметр2>  - <Тип.Вид> - <описание параметра>
      //                 <продолжение описания параметра>
      //
      // Возвращаемое значение:
      //   <Тип.Вид>   - <описание возвращаемого значения>
      //
      &${1:ВыберитеДирективуКомпиляции}
      Функция ${2:ИмяФункции}()
      	$0
      КонецФункции // ${2:ИмяФункции}()
    '''
    description: "Функция модуля команды"
  "Возврат":
    prefix: "Возврат"
    body: "Возврат;$0"
    description: "Возврат"
  "Попытка":
    prefix: "Попытка"
    body: '''
      Попытка
      	$0
      Исключение
      КонецПопытки;
    '''
    description: "Попытка"
  "Директива компиляции":
    prefix: "Директива"
    body: "&${1:ВыберитеДирективуКомпиляции}"
    description: "Директива компиляции"
  "Инструкция Если":
    prefix: "Инструкция"
    body: '''
      #Если ${1:ВыберитеИнструкциюПрепроцессора} Тогда
      	$0
      #КонецЕсли
    '''
    description: "Инструкция Если"
  "Инструкция Область":
    prefix: "Область"
    body: '''
      #Область $0
      #КонецОбласти
    '''
    description: "Инструкция Область"
  "Перечисление":
    prefix: "Перечисление"
    body: "ПредопределенноеЗначение(\"Перечисление.${1:ВыберитеЗначениеПеречисления}\")"
    description: "Перечисление"
  "Получить функциональную опцию":
    prefix: "Функциональнаяопция"
    body: "ПолучитьФункциональнуюОпцию(\"${1:ВыберитеФункциональнуюОпцию}\")"
    description: "Получить функциональную опцию"
  "Получить функциональную опцию интерфейса":
    prefix: "Функциональнаяопция2"
    body: "ПолучитьФункциональнуюОпциюИнтерфейса(\"${1:ВыберитеФункциональнуюОпцию}\")"
    description: "Получить функциональную опцию интерфейса"
  "Открыть общую форму":
    prefix: "ОткрытьФорму"
    body: "ОткрытьФорму(\"ОбщаяФорма.${1:ВыберитеОбщуюФорму}\");"
    description: "Открыть общую форму"
  "Открыть общую форму (с параметрами)":
    prefix: "ОткрытьФорму2"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("ОбщаяФорма.${1:ВыберитеОбщуюФорму}", ПараметрыФормы);
    '''
    description: "Открыть общую форму (с параметрами)"
  "Получить общую форму":
    prefix: "ПолучитьФорму"
    body: "ПолучитьФорму(\"ОбщаяФорма.${1:ВыберитеОбщуюФорму}\");"
    description: "Получить общую форму"
  "Получить общую форму (с параметрами)":
    prefix: "ПолучитьФорму2"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("ОбщаяФорма.${1:ВыберитеОбщуюФорму}");
    '''
    description: "Получить общую форму (с параметрами)"
  "Открыть форму плана обмена":
    prefix: "ОткрытьФорму3"
    body: "ОткрытьФорму(\"ПланОбмена.${1:ВыберитеПланОбмена}.${2:ВыберитеФорму}\");"
    description: "Открыть форму плана обмена"
  "Открыть форму плана обмена (с параметрами)":
    prefix: "ОткрытьФорму4"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("ПланОбмена.${1:ВыберитеПланОбмена}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму плана обмена (с параметрами)"
  "Получить форму плана обмена":
    prefix: "ПолучитьФорму3"
    body: "ПолучитьФорму(\"ПланОбмена.${1:ВыберитеПланОбмена}.${2:ВыберитеФорму}\");"
    description: "Получить форму плана обмена"
  "Получить форму плана обмена (с параметрами)":
    prefix: "ПолучитьФорму4"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("ПланОбмена.${1:ВыберитеПланОбмена}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму плана обмена (с параметрами)"
  "Обход элементов":
    prefix: "СправочникиВыбрать"
    body: '''
      Выборка = Справочники.$1.Выбрать();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Обход элементов"
  "Получить/установить константу":
    prefix: "Константы"
    body: "Константы.$1.${2:ВыборМетода}()"
    description: "Получить/установить константу"
  "Установить константу":
    prefix: "Константы2"
    body: "Константы.$1.Установить($0);"
    description: "Установить константу"
  "Получить константу":
    prefix: "Константы3"
    body: "Константы.$1.Получить()"
    description: "Получить константу"
  "Открыть форму справочника":
    prefix: "ОткрытьФорму5"
    body: "ОткрытьФорму(\"Справочник.${1:ВыберитеСправочник}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму справочника"
  "Открыть форму справочника (с параметрами)":
    prefix: "ОткрытьФорму6"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("Справочник.${1:ВыберитеСправочник}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму справочника (с параметрами)"
  "Получить форму справочника":
    prefix: "ПолучитьФорму5"
    body: "ПолучитьФорму(\"Справочник.${1:ВыберитеСправочник}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму справочника"
  "Получить форму справочника (с параметрами)":
    prefix: "ПолучитьФорму6"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("Справочник.${1:ВыберитеСправочник}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму справочника (с параметрами)"
  "Обход элементов иерархически":
    prefix: "СправочникиВыбратьИерархически"
    body: '''
      Выборка = Справочники.$1.ВыбратьИерархически();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Обход элементов иерархически"
  "Открыть форму документа":
    prefix: "ОткрытьФорму7"
    body: "ОткрытьФорму(\"Документ.${1:ВыберитеДокумент}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму документа"
  "Открыть форму документа (с параметрами)":
    prefix: "ОткрытьФорму8"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("Документ.${1:ВыберитеДокумент}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму документа (с параметрами)"
  "Получить форму документа":
    prefix: "ПолучитьФорму7"
    body: "ПолучитьФорму(\"Документ.${1:ВыберитеДокумент}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму документа"
  "Получить форму документа (с параметрами)":
    prefix: "ПолучитьФорму8"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("Документ.${1:ВыберитеДокумент}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму документа (с параметрами)"
  "Обход документов":
    prefix: "ДокументыВыбрать"
    body: '''
      Выборка = Документы.$1.Выбрать();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Обход документов"
  "Движения":
    prefix: "Движения"
    body: "Движения.${1:ВыборРегистра}"
    description: "Движения"
  "Открыть форму отчета":
    prefix: "ОткрытьФорму9"
    body: "ОткрытьФорму(\"Отчет.${1:ВыберитеОтчет}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму отчета"
  "Открыть форму отчета (с параметрами)":
    prefix: "ОткрытьФорму10"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("Отчет.${1:ВыберитеОтчет}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму отчета (с параметрами)"
  "Получить форму отчета":
    prefix: "ПолучитьФорму9"
    body: "ПолучитьФорму(\"Отчет.${1:ВыберитеОтчет}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму отчета"
  "Получить форму отчета (с параметрами)":
    prefix: "ПолучитьФорму10"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("Отчет.${1:ВыберитеОтчет}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму отчета (с параметрами)"
  "Открыть форму обработки":
    prefix: "ОткрытьФорму11"
    body: "ОткрытьФорму(\"Обработка.${1:ВыберитеОбработку}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму обработки"
  "Открыть форму обработки (с параметрами)":
    prefix: "ОткрытьФорму12"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("Обработка.${1:ВыберитеОбработку}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму обработки (с параметрами)"
  "Получить форму обработки":
    prefix: "ПолучитьФорму11"
    body: "ПолучитьФорму(\"Обработка.${1:ВыберитеОбработку}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму обработки"
  "Получить форму обработки (с параметрами)":
    prefix: "ПолучитьФорму12"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("Обработка.${1:ВыберитеОбработку}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму обработки (с параметрами)"
  "Открыть форму плана видов характеристик":
    prefix: "ОткрытьФорму13"
    body: "ОткрытьФорму(\"ПланВидовХарактеристик.${1:ВыберитеПвх}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму плана видов характеристик"
  "Открыть форму плана видов характеристик (с параметрами)":
    prefix: "ОткрытьФорму14"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("ПланВидовХарактеристик.${1:ВыберитеПвх}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму плана видов характеристик (с параметрами)"
  "Получить форму плана видов характеристик":
    prefix: "ПолучитьФорму13"
    body: "ПолучитьФорму(\"ПланВидовХарактеристик.${1:ВыберитеПвх}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму плана видов характеристик"
  "Получить форму плана видов характеристик (с параметрами)":
    prefix: "ПолучитьФорму14"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("ПланВидовХарактеристик.${1:ВыберитеПвх}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму плана видов характеристик (с параметрами)"
  "Обход видов характеристик":
    prefix: "ПланыВидовХарактеристикВыбрать"
    body: '''
      Выборка = ПланыВидовХарактеристик.$1.Выбрать();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Обход видов характеристик"
  "Открыть форму плана счетов":
    prefix: "ОткрытьФорму15"
    body: "ОткрытьФорму(\"ПланСчетов.${1:ВыберитеПланСчетов}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму плана счетов"
  "Открыть форму плана счетов (с параметрами)":
    prefix: "ОткрытьФорму16"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("ПланСчетов.${1:ВыберитеПланСчетов}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму плана счетов (с параметрами)"
  "Получить форму плана счетов":
    prefix: "ПолучитьФорму15"
    body: "ПолучитьФорму(\"ПланСчетов.${1:ВыберитеПланСчетов}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму плана счетов"
  "Получить форму плана счетов (с параметрами)":
    prefix: "ПолучитьФорму16"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("ПланСчетов.${1:ВыберитеПланСчетов}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму плана счетов (с параметрами)"
  "Найти по коду":
    prefix: "ПланыСчетов"
    body: "ПланыСчетов.$1.НайтиПоКоду($0)"
    description: "Найти по коду"
  "Открыть форму плана видов расчета":
    prefix: "ОткрытьФорму17"
    body: "ОткрытьФорму(\"ПланВидовРасчета.${1:ВыберитеПланВидовРасчета}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму плана видов расчета"
  "Открыть форму плана видов расчета (с параметрами)":
    prefix: "ОткрытьФорму18"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("ПланВидовРасчета.${1:ВыберитеПланВидовРасчета}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму плана видов расчета (с параметрами)"
  "Получить форму плана видов расчета":
    prefix: "ПолучитьФорму17"
    body: "ПолучитьФорму(\"ПланВидовРасчета.${1:ВыберитеПланВидовРасчета}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму плана видов расчета"
  "Получить форму плана видов расчета (с параметрами)":
    prefix: "ПолучитьФорму18"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("ПланВидовРасчета.${1:ВыберитеПланВидовРасчета}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму плана видов расчета (с параметрами)"
  "Обход видов расчета":
    prefix: "ПланыВидовРасчетаВыбрать"
    body: '''
      Выборка = ПланыВидовРасчета.$1.Выбрать();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Обход видов расчета"
  "Открыть форму бизнес-процесса":
    prefix: "ОткрытьФорму19"
    body: "ОткрытьФорму(\"БизнесПроцесс.${1:ВыберитеБизнес-Процесс}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму бизнес-процесса"
  "Открыть форму бизнес-процесса (с параметрами)":
    prefix: "ОткрытьФорму20"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("БизнесПроцесс.${1:ВыберитеБизнес-Процесс}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму бизнес-процесса (с параметрами)"
  "Получить форму бизнес-процесса":
    prefix: "ПолучитьФорму19"
    body: "ПолучитьФорму(\"БизнесПроцесс.${1:ВыберитеБизнес-Процесс}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму бизнес-процесса"
  "Получить форму бизнес-процесса (с параметрами)":
    prefix: "ПолучитьФорму20"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("БизнесПроцесс.${1:ВыберитеБизнес-Процесс}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму бизнес-процесса (с параметрами)"
  "Обход бизнес-процессов":
    prefix: "БизнесПроцессыВыбрать"
    body: '''
      Выборка = БизнесПроцессы.$1.Выбрать();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Обход бизнес-процессов"
  "Открыть форму задачи":
    prefix: "ОткрытьФорму21"
    body: "ОткрытьФорму(\"Задача.${1:ВыберитеЗадачу}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму задачи"
  "Открыть форму задачи (с параметрами)":
    prefix: "ОткрытьФорму22"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("Задача.${1:ВыберитеЗадачу}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму задачи (с параметрами)"
  "Получить форму задачи":
    prefix: "ПолучитьФорму21"
    body: "ПолучитьФорму(\"Задача.${1:ВыберитеЗадачу}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму задачи"
  "Получить форму задачи (с параметрами)":
    prefix: "ПолучитьФорму22"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("Задача.${1:ВыберитеЗадачу}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму задачи (с параметрами)"
  "Открыть форму регистра сведений":
    prefix: "ОткрытьФорму23"
    body: "ОткрытьФорму(\"РегистрСведений.${1:ВыберитеРегистрСведений}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму регистра сведений"
  "Открыть форму регистра сведений (с параметрами)":
    prefix: "ОткрытьФорму24"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("РегистрСведений.${1:ВыберитеРегистрСведений}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму регистра сведений (с параметрами)"
  "Получить форму регистра сведений":
    prefix: "ПолучитьФорму23"
    body: "ПолучитьФорму(\"РегистрСведений.${1:ВыберитеРегистрСведений}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму регистра сведений"
  "Получить форму регистра сведений (с параметрами)":
    prefix: "ПолучитьФорму24"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("РегистрСведений.${1:ВыберитеРегистрСведений}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму регистра сведений (с параметрами)"
  "Выборка записей регистра сведений":
    prefix: "РегистрыСведенийВыбрать"
    body: '''
      Выборка = РегистрыСведений.${1:ВыберитеРегистрСведений}.Выбрать();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Выборка записей регистра сведений"
  "Выборка записей регистра сведений (по регистратору)":
    prefix: "РегистрыСведенийВыбратьПоРегистратору"
    body: '''
      Выборка = РегистрСведений.${1:ВыберитеРегистрСведений}.ВыбратьПоРегистратору($0);
      Пока Выборка.Следующий() Цикл
      КонецЦикла;
    '''
    description: "Выборка записей регистра сведений (по регистратору)"
  "Открыть форму регистра накопления":
    prefix: "ОткрытьФорму25"
    body: "ОткрытьФорму(\"РегистрНакопления.${1:ВыберитеРегистрНакопления}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму регистра накопления"
  "Открыть форму регистра накопления (с параметрами)":
    prefix: "ОткрытьФорму26"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("РегистрНакопления.${1:ВыберитеРегистрНакопления}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму регистра накопления (с параметрами)"
  "Получить форму регистра накопления":
    prefix: "ПолучитьФорму25"
    body: "ПолучитьФорму(\"РегистрНакопления.${1:ВыберитеРегистрНакопления}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму регистра накопления"
  "Получить форму регистра накопления (с параметрами)":
    prefix: "ПолучитьФорму26"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("РегистрНакопления.${1:ВыберитеРегистрНакопления}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму регистра накопления (с параметрами)"
  "Выборка записей регистра накопления":
    prefix: "РегистрНакопленияВыбрать"
    body: '''
      Выборка = РегистрНакопления.${1:ВыберитеРегистрНакопления}.Выбрать();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Выборка записей регистра накопления"
  "Выборка записей регистра накопления (по регистратору)":
    prefix: "РегистрНакопленияВыбратьПоРегистратору"
    body: '''
      Выборка = РегистрНакопления.${1:ВыберитеРегистрНакопления}.ВыбратьПоРегистратору($0);
      Пока Выборка.Следующий() Цикл
      КонецЦикла;
    '''
    description: "Выборка записей регистра накопления (по регистратору)"
  "Открыть форму регистра бухгалтерии":
    prefix: "ОткрытьФорму27"
    body: "ОткрытьФорму(\"РегистрБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму регистра бухгалтерии"
  "Открыть форму регистра бухгалтерии (с параметрами)":
    prefix: "ОткрытьФорму28"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("РегистрБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму регистра бухгалтерии (с параметрами)"
  "Получить форму регистра бухгалтерии":
    prefix: "ПолучитьФорму27"
    body: "ПолучитьФорму(\"РегистрБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму регистра бухгалтерии"
  "Получить форму регистра бухгалтерии (с параметрами)":
    prefix: "ПолучитьФорму28"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("РегистрБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму регистра бухгалтерии (с параметрами)"
  "Выборка записей регистра бухгалтерии":
    prefix: "РегистрыБухгалтерииВыбрать"
    body: '''
      Выборка = РегистрыБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.Выбрать();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Выборка записей регистра бухгалтерии"
  "Выборка записей регистра бухгалтерии (по регистратору)":
    prefix: "РегистрыБухгалтерииВыбратьПоРегистратору"
    body: '''
      Выборка = РегистрыБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.ВыбратьПоРегистратору($0);
      Пока Выборка.Следующий() Цикл
      КонецЦикла;
    '''
    description: "Выборка записей регистра бухгалтерии (по регистратору)"
  "Открыть форму регистра расчета":
    prefix: "ОткрытьФорму29"
    body: "ОткрытьФорму(\"РегистрРасчета.${1:ВыберитеРегистрРасчета}.${2:ВыберитеФорму}$0\");"
    description: "Открыть форму регистра расчета"
  "Открыть форму регистра расчета (с параметрами)":
    prefix: "ОткрытьФорму30"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      ОткрытьФорму("РегистрРасчета.${1:ВыберитеРегистрРасчета}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Открыть форму регистра расчета (с параметрами)"
  "Получить форму регистра расчета":
    prefix: "ПолучитьФорму29"
    body: "ПолучитьФорму(\"РегистрРасчета.${1:ВыберитеРегистрРасчета}.${2:ВыберитеФорму}$0\");"
    description: "Получить форму регистра расчета"
  "Получить форму регистра расчета (с параметрами)":
    prefix: "ПолучитьФорму30"
    body: '''
      ПараметрыФормы = Новый Структура;
      ПараметрыФормы.Вставить("$0", );
      Форма = ПолучитьФорму("РегистрРасчета.${1:ВыберитеРегистрРасчета}.${2:ВыберитеФорму}", ПараметрыФормы);
    '''
    description: "Получить форму регистра расчета (с параметрами)"
  "Выборка записей регистра расчета":
    prefix: "РегистрыРасчетаВыбрать"
    body: '''
      Выборка = РегистрыРасчета.${1:ВыберитеРегистрРасчета}.Выбрать();
      Пока Выборка.Следующий() Цикл
      	$0
      КонецЦикла;
    '''
    description: "Выборка записей регистра расчета"
  "Выборка записей регистра расчета (по регистратору)":
    prefix: "РегистрыРасчетаВыбратьПоРегистратору"
    body: '''
      Выборка = РегистрыРасчета.${1:ВыберитеРегистрРасчета}.ВыбратьПоРегистратору($0);
      Пока Выборка.Следующий() Цикл
      КонецЦикла;
    '''
    description: "Выборка записей регистра расчета (по регистратору)"
  "Сообщение":
    prefix: "Сообщение"
    body: '''
      Сообщение = Новый СообщениеПользователю;
      Сообщение.Текст = "$0";
      Сообщение.Поле = "";
      Сообщение.УстановитьДанные();
      Сообщение.Сообщить();
    '''
    description: "Сообщение"
  "Предупреждение":
    prefix: "Предупреждение"
    body: "Предупреждение($0);"
    description: "Предупреждение"
  "Формат":
    prefix: "Формат"
    body: "Формат($0, \"$1\")"
    description: "Формат"
  "Создать структуру":
    prefix: "Структура"
    body: "Новый Структура(\"$0\", )"
    description: "Создать структуру"
  "Запрос":
    prefix: "Запрос"
    body: '''
      Запрос = Новый Запрос;
      Запрос.Текст = "$1";
      Результат = Запрос.Выполнить();
      Выборка = Результат.Выбрать();
      Пока Выборка.Следующий() Цикл
        $0
      КонецЦикла;
    '''
    description: "Запрос"
  "Запрос с параметром":
    prefix: "Запрос2"
    body: '''
      Запрос = Новый Запрос;
      Запрос.Текст = "$1";
      Запрос.УстановитьПараметр("$0", );
      Результат = Запрос.Выполнить();
      Выборка = Результат.Выбрать();
      Пока Выборка.Следующий() Цикл
      КонецЦикла;
    '''
    description: "Запрос с параметром"
  "Вопрос":
    prefix: "Вопрос"
    body: "Вопрос(\"${1:ТекстВопроса}\", ${2:РежимДиалогаВопрос})"
    description: "Вопрос"
  "Вопрос с анализом результата":
    prefix: "Вопрос2"
    body: "Вопрос(\"${1:ТекстВопроса}\", ${2:РежимДиалогаВопрос}) = ${3:КодВозвратаДиалога}"
    description: "Вопрос с анализом результата"
  "Проверка типа":
    prefix: "ПроверитьТип"
    body: '''
      Если ТипЗнч(${1:ВыражениеДляПроверкиТипа}) = Тип("${2:ВыберитеТип}") Тогда
      	$0
      КонецЕсли;
    '''
    description: "Проверка типа"
  If:
    prefix: "If"
    body: '''
      If ${1:Condition} Then
      	$0
      EndIf;
    '''
    description: "If"
  IfElse:
    prefix: "If2"
    body: '''
      If ${1:Condition} Then
      	$0
      Else
      EndIf;
    '''
    description: "IfElse"
  While:
    prefix: "While"
    body: '''
      While ${1:Condition} Do
      	$0
      EndDo;
    '''
    description: "While"
  For:
    prefix: "For"
    body: '''
      For ${1:Counter} To ${2:Limit} Do
      	$0
      EndDo;
    '''
    description: "For"
  "For Each":
    prefix: "ForEach"
    body: '''
      For Each ${1:Variable} In ${2:Collection} Do
      	$0
      EndDo;
    '''
    description: "For Each"
  Procedure:
    prefix: "Procedure"
    body: '''
      Procedure ${1:ProcedureName}()
      	$0
      EndProcedure
    '''
    description: "Procedure"
  "Procedure (with header)":
    prefix: "Procedure2"
    body: '''
      // <Procedure description>
      //
      // Parameters:
      //  <Parameter1>  - <Type.Subtype> - <parameter description>
      //                  <parameter description continued>
      //  <Parameter2>  - <Type.Subtype> - <parameter description>
      //                  <parameter description continued>
      //
      Procedure ${1:ProcedureName}()
      	$0
      EndProcedure // ${1:ProcedureName}()
    '''
    description: "Procedure (with header)"
  "Procedure in a form module":
    prefix: "Procedure3"
    body: '''
      // <Procedure description>
      //
      // Parameters:
      //  <Parameter1>  - <Type.Subtype> - <parameter description>
      //                  <parameter description continued>
      //  <Parameter2>  - <Type.Subtype> - <parameter description>
      //                  <parameter description continued>
      //
      &${1:ChooseACompilationDirective}
      Procedure ${2:ProcedureName}()
      	$0
      EndProcedure // ${2:ProcedureName}()
    '''
    description: "Procedure in a form module"
  "Procedure in a command module":
    prefix: "Procedure4"
    body: '''
      // <Procedure description>
      //
      // Parameters:
      //  <Parameter1>  - <Type.Subtype> - <parameter description>
      //                  <parameter description continued>
      //  <Parameter2>  - <Type.Subtype> - <parameter description>
      //                  <parameter description continued>
      //
      &${1:ChooseACompilationDirective}
      Procedure ${2:ProcedureName}()
      	$0
      EndProcedure // ${2:ProcedureName}()
    '''
    description: "Procedure in a command module"
  Function:
    prefix: "Function"
    body: '''
      Function ${1:FunctionName}()
      	$0
      EndFunction // ${1:FunctionName}()
    '''
    description: "Function"
  "Function (with header)":
    prefix: "Function2"
    body: '''
      // <Function description>
      //
      //
      // Parameters:
      //  <Parameter1>  - <Type.Subtype> - <parameter description>
      //                 <parameter description continued>
      //  <Parameter2>  - <Type.Subtype> - <parameter description>
      //                 <parameter description continued>
      //
      // Returns:
      //   <Type.Subtype>   - <returned value description>
      //
      Function ${1:FunctionName}()
      	$0
      EndFunction // ${1:FunctionName}()
    '''
    description: "Function (with header)"
  "Function in a form module":
    prefix: "Function3"
    body: '''
      // <Function description>
      //
      //
      // Parameters:
      //  <Parameter1>  - <Type.Subtype> - <parameter description>
      //                 <parameter description continued>
      //  <Parameter2>  - <Type.Subtype> - <parameter description>
      //                 <parameter description continued>
      //
      // Returns:
      //   <Type.Subtype>   - <returned value description>
      //
      &${1:ChooseACompilationDirective}
      Function ${2:FunctionName}()
      	$0
      EndFunction // ${2:FunctionName}()
    '''
    description: "Function in a form module"
  "Function in a command module":
    prefix: "Function4"
    body: '''
      // <Function description>
      //
      //
      // Parameters:
      //  <Parameter1>  - <Type.Subtype> - <parameter description>
      //                 <parameter description continued>
      //  <Parameter2>  - <Type.Subtype> - <parameter description>
      //                 <parameter description continued>
      //
      // Returns:
      //   <Type.Subtype>   - <returned value description>
      //
      &${1:ChooseACompilationDirective}
      Function ${2:FunctionName}()
      	$0
      EndFunction // ${2:FunctionName}()
    '''
    description: "Function in a command module"
  Return:
    prefix: "Return"
    body: "Return;$0"
    description: "Return"
  Try:
    prefix: "Try"
    body: '''
      Try
      	$0
      Except
      EndTry;
    '''
    description: "Try"
  "Compilation directive":
    prefix: "Directive"
    body: "&${1:ChooseACompilationDirective}"
    description: "Compilation directive"
  "Instruction If":
    prefix: "Instrution"
    body: '''
      #If ${1:ChooseAPreprocessorInstruction} Then
      	$0
      #EndIf
    '''
    description: "Instruction If"
  "Instruction Region":
    prefix: "Region"
    body: '''
      #Region $0
      #EndRegion
    '''
    description: "Instruction Region"
  Enumeration:
    prefix: "Enums"
    body: "PredefinedValue(\"Enum.${1:ChooseAnEnumerationValue}\")"
    description: "Enumeration"
  "Get a functional option":
    prefix: "Functionaloption"
    body: "GetFunctionalOption(\"${1:ChooseAFunctionalOption}\")"
    description: "Get a functional option"
  "Get an interface functional option":
    prefix: "Functionaloption2"
    body: "GetInterfaceFunctionalOption(\"${1:ChooseAFunctionalOption}\")"
    description: "Get an interface functional option"
  "Open a common form":
    prefix: "OpenForm"
    body: "OpenForm(\"CommonForm.${1:ChooseACommonForm}\");"
    description: "Open a common form"
  "Open a common form (with parameters)":
    prefix: "OpenForm2"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("CommonForm.${1:ChooseACommonForm}", FormParameters);
    '''
    description: "Open a common form (with parameters)"
  "Get a common form":
    prefix: "GetForm"
    body: "GetForm(\"CommonForm.${1:ChooseACommonForm}\");"
    description: "Get a common form"
  "Get a common form (with parameters)":
    prefix: "GetForm2"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("CommonForm.${1:ChooseACommonForm}");
    '''
    description: "Get a common form (with parameters)"
  "Open an exchange plan form":
    prefix: "OpenForm3"
    body: "OpenForm(\"ExchangePlan.${1:ChooseAnExchangePlan}.${2:ChooseForm}\");"
    description: "Open an exchange plan form"
  "Open an exchange plan form (with parameters)":
    prefix: "OpenForm4"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("ExchangePlan.${1:ChooseAnExchangePlan}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open an exchange plan form (with parameters)"
  "Get an exchange plan form":
    prefix: "GetForm3"
    body: "GetForm(\"ExchangePlan.${1:ChooseAnExchangePlan}.${2:ChooseForm}\");"
    description: "Get an exchange plan form"
  "Get an exchange plan form (with parameters)":
    prefix: "GetForm4"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("ExchangePlan.${1:ChooseAnExchangePlan}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get an exchange plan form (with parameters)"
  "Items traversal":
    prefix: "ExchangePlansChoose"
    body: '''
      Selection = ExchangePlans.$1.Choose();
      While Selection.Next() Do
      	$0
      EndDo;
    '''
    description: "Items traversal"
  "Get/Set constant":
    prefix: "Constants"
    body: "Constants.$1.${2:SelectVariant}()"
    description: "Get/Set constant"
  "Set constant":
    prefix: "Constants2"
    body: "Constants.$1.Set($0);"
    description: "Set constant"
  "Get constant":
    prefix: "Constants3"
    body: "Constants.$1.Get()"
    description: "Get constant"
  "Open a catalog form":
    prefix: "OpenForm5"
    body: "OpenForm(\"Catalog.${1:ChooseACatalog}.${2:ChooseForm}$0\");"
    description: "Open a catalog form"
  "Open a catalog form (with parameters)":
    prefix: "OpenForm6"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("Catalog.${1:ChooseCatalog}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a catalog form (with parameters)"
  "Get a catalog form":
    prefix: "GetForm5"
    body: "GetForm(\"Catalog.${1:ChooseACatalog}.${2:ChooseForm}$0\");"
    description: "Get a catalog form"
  "Get a catalog form (with parameters)":
    prefix: "GetForm6"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("Catalog.${1:ChooseCatalog}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a catalog form (with parameters)"
  "Item traversal":
    prefix: "CatalogsSelect"
    body: '''
      Select = Catalogs.$1.Select();
      While Select.Next() Do
      	$0
      EndDo;
    '''
    description: "Item traversal"
  "Items hierarchical traversal":
    prefix: "CatalogsSelectHierarchicaly"
    body: '''
      Select = Catalogs.$1.SelectHierarchicaly();
      While Select.Next() Do
      	$0
      EndDo;
    '''
    description: "Items hierarchical traversal"
  "Open a document form":
    prefix: "OpenForm7"
    body: "OpenForm(\"Document.${1:ChooseADocument}.${2:ChooseForm}$0\");"
    description: "Open a document form"
  "Open a document form (with parameters)":
    prefix: "OpenForm8"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("Document.${1:ChooseADocument}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a document form (with parameters)"
  "Get a document form":
    prefix: "GetForm7"
    body: "GetForm(\"Document.${1:ChooseADocument}.${2:ChooseForm}$0\");"
    description: "Get a document form"
  "Get a document form (with parameters)":
    prefix: "GetForm8"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("Document.${1:ChooseADocument}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a document form (with parameters)"
  "Document walk-through":
    prefix: "DocumentsSelect"
    body: '''
      Select = Documents.$1.Select();
      While Selection.Next() Do
      	$0
      EndDo;
    '''
    description: "Document walk-through"
  RegisterRecords:
    prefix: "RegisterRecords"
    body: "RegisterRecords.${1:ChooseARegister}"
    description: "RegisterRecords"
  "Open a report form":
    prefix: "OpenForm9"
    body: "OpenForm(\"Report.${1:ChooseAReport}.${2:ChooseForm}$0\");"
    description: "Open a report form"
  "Open a report form (with parameters)":
    prefix: "OpenForm10"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("Report.${1:ChooseAReport}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a report form (with parameters)"
  "Get a report form":
    prefix: "GetForm9"
    body: "GetForm(\"Report.${1:ChooseAReport}.${2:ChooseForm}$0\");"
    description: "Get a report form"
  "Get a report form (with parameters)":
    prefix: "GetForm10"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("Report.${1:ChooseAReport}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a report form (with parameters)"
  "Open a data processor form":
    prefix: "OpenForm11"
    body: "OpenForm(\"DataProcessor.${1:ChooseADataProcessor}.${2:ChooseForm}$0\");"
    description: "Open a data processor form"
  "Open a data processor form (with parameters)":
    prefix: "OpenForm12"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("DataProcessor.${1:ChooseADataProcessor}}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a data processor form (with parameters)"
  "Get a data processor form":
    prefix: "GetForm11"
    body: "GetForm(\"DataProcessor.${1:ChooseADataProcessor}.${2:ChooseForm}$0\");"
    description: "Get a data processor form"
  "Get a data processor form (with parameters)":
    prefix: "GetForm12"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("DataProcessor.${1:ChooseADataProcessor}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a data processor form (with parameters)"
  "Open a chart of characteristic types form":
    prefix: "OpenForm13"
    body: "OpenForm(\"ChartOfCharacteristicTypes.${1:ChooseAChartOfCharateristicTypes}.${2:ChooseForm}$0\");"
    description: "Open a chart of characteristic types form"
  "Open a chart of characteristic types form (with parameters)":
    prefix: "OpenForm14"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("ChartOfCharacteristicTypes.${1:ChooseAChartOfCharacteristicTypes}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a chart of characteristic types form (with parameters)"
  "Get a chart of characteristic types form":
    prefix: "GetForm13"
    body: "GetForm(\"ChartOfCharacteristicTypes.${1:ChooseAChartOfCharacteristicTypes}.${2:ChooseForm}$0\");"
    description: "Get a chart of characteristic types form"
  "Get a chart of characteristic types form (with parameters)":
    prefix: "GetForm14"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("ChartOfCharacteristicTypes.${1:ChooseAChartOfCharacteristicTypes}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a chart of characteristic types form (with parameters)"
  "Charts of characteristic types traversal":
    prefix: "ChartOfAccountsChoose"
    body: '''
      Selection = ChartOfAccounts.$1.Choose();
      While Selection.Next() Do
      	$0
      EndDo;
    '''
    description: "Charts of characteristic types traversal"
  "Open a chart of accounts form":
    prefix: "OpenForm15"
    body: "OpenForm(\"ChartOfAccounts.${1:ChooseAChartOfAccounts}.${2:ChooseForm}$0\");"
    description: "Open a chart of accounts form"
  "Open a chart of accounts form (with parameters)":
    prefix: "OpenForm16"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("ChartOfAccounts.${1:ChooseAChartOfAccounts}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a chart of accounts form (with parameters)"
  "Get a chart of accounts form":
    prefix: "GetForm15"
    body: "GetForm(\"ChartOfAccounts.${1:ChooseAChartOfAccounts}.${2:ChooseForm}$0\");"
    description: "Get a chart of accounts form"
  "Get a chart of accounts form (with parameters)":
    prefix: "GetForm16"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("ChartOfAccounts.${1:ChooseAChartOfAccounts}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a chart of accounts form (with parameters)"
  "Find by code":
    prefix: "ChartsOfAccounts"
    body: "ChartsOfAccounts.$1.FindByCode($0)"
    description: "Find by code"
  "Open a chart of calculation types form":
    prefix: "OpenForm17"
    body: "OpenForm(\"ChartOfCalculationTypes.${1:ChooseAChartOfCalculationTypes}.${2:ChooseForm}$0\");"
    description: "Open a chart of calculation types form"
  "Open a chart of calculation types form (with parameters)":
    prefix: "OpenForm18"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("ChartOfCalculationTypes.${1:ChooseAChartOfCalculationTypes}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a chart of calculation types form (with parameters)"
  "Get a chart of calculation types form":
    prefix: "GetForm17"
    body: "GetForm(\"ChartOfCalculationTypes.${1:ChooseAChartOfCalculationTypes}.${2:ChooseForm}$0\");"
    description: "Get a chart of calculation types form"
  "Get a chart of calculation types form (with parameters)":
    prefix: "GetForm18"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("ChartOfCalculationTypes.${1:ChooseAChartOfCalculationTypes}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a chart of calculation types form (with parameters)"
  "Charts of calculation types traversal":
    prefix: "ChartsOfCalculationTypesChoose"
    body: '''
      Selection = ChartsOfCalculationTypes.$1.Choose();
      While Selection.Next() Do
      	$0
      EndDo;
    '''
    description: "Charts of calculation types traversal"
  "Open a business process form":
    prefix: "OpenForm19"
    body: "OpenForm(\"BusinessProcess.${1:ChooseABusinessProcess}.${2:ChooseForm}$0\");"
    description: "Open a business process form"
  "Open a business process form (with parameters)":
    prefix: "OpenForm20"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("BusinessProcess.${1:ChooseABusinessProcess}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a business process form (with parameters)"
  "Get a business process form":
    prefix: "GetForm19"
    body: "GetForm(\"BusinessProcess.${1:ChooseABusinessProcess}.${2:ChooseForm}$0\");"
    description: "Get a business process form"
  "Get a business process form (with parameters)":
    prefix: "GetForm20"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("BusinessProcess.${1:ChooseABusinessProcess}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a business process form (with parameters)"
  "Business processes traversal":
    prefix: "BusinessProcessesChoose"
    body: '''
      Selection = BusinessProcesses.$1.Choose();
      While Selection.Next() Do
      	$0
      EndDo;
    '''
    description: "Business processes traversal"
  "Open a task form":
    prefix: "OpenForm21"
    body: "OpenForm(\"Task.${1:ChooseATask}.${2:ChooseForm}$0\");"
    description: "Open a task form"
  "Open a task form (with parameters)":
    prefix: "OpenForm22"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("Task.${1:ChooseATask}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a task form (with parameters)"
  "Get a task form":
    prefix: "GetForm21"
    body: "GetForm(\"Task.${1:ChooseATask}.${2:ChooseForm}$0\");"
    description: "Get a task form"
  "Get a task form (with parameters)":
    prefix: "GetForm22"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("Task.${1:ChooseATask}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a task form (with parameters)"
  "Open an information register form":
    prefix: "OpenForm23"
    body: "OpenForm(\"InformationRegister.${1:ChooseAnInformationRegister}.${2:ChooseForm}$0\");"
    description: "Open an information register form"
  "Open an information register form (with parameters)":
    prefix: "OpenForm24"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("InformationRegister.${1:ChooseAnInformationRegister}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open an information register form (with parameters)"
  "Get an information register form":
    prefix: "GetForm23"
    body: "GetForm(\"InformationRegister.${1:ChooseAnInformationRegister}.${2:ChooseForm}$0\");"
    description: "Get an information register form"
  "Get an information register form (with parameters)":
    prefix: "GetForm24"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("InformationRegister.${1:ChooseAnInformationRegister}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get an information register form (with parameters)"
  "Selection of information register records":
    prefix: "InformationRegisterChoose"
    body: '''
      Selection = InformationRegister.${1:ChooseAnInformationRegister}.Choose();
      While Selection.Next() Do
      	$0
      EndDo;
    '''
    description: "Selection of information register records"
  "Selection of information register records (by recorder)":
    prefix: "InformationRegisterSelectByRecorder"
    body: '''
      Selection = InformationRegister.${1:ChooseAnInformationRegister}.SelectByRecorder($0);
      While Selection.Next() Do
      EndDo;
    '''
    description: "Selection of information register records (by recorder)"
  "Open an accumulation register form":
    prefix: "OpenForm25"
    body: "OpenForm(\"AccumulationRegister.${1:ChooseAnAccumulationRegister}.${2:ChooseForm}$0\");"
    description: "Open an accumulation register form"
  "Open an accumulation register form (with parameters)":
    prefix: "OpenForm26"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("AccumulationRegister.${1:ChooseAnAccumulationRegister}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open an accumulation register form (with parameters)"
  "Get an accumulation register form":
    prefix: "GetForm25"
    body: "GetForm(\"AccumulationRegister.${1:ChooseAnAccumulationRegister}.${2:ChooseForm}$0\");"
    description: "Get an accumulation register form"
  "Get an accumulation register form (with parameters)":
    prefix: "GetForm26"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("AccumulationRegister.${1:ChooseAnAccumulationRegister}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get an accumulation register form (with parameters)"
  "Selection of accumulation register records":
    prefix: "AccumulationRegisterChoose"
    body: '''
      Selection = AccumulationRegister.${1:ChooseAnAccumulationRegister}.Choose();
      While Selection.Next() Do
      	$0
      EndDo;
    '''
    description: "Selection of accumulation register records"
  "Selection of accumulation register records (by recorder)":
    prefix: "AccumulationRegisterSelectByRecorder"
    body: '''
      Selection = AccumulationRegister.${1:ChooseAnAccumulationRegister}.SelectByRecorder($0);
      While Selection.Next() Do
      EndDo;
    '''
    description: "Selection of accumulation register records (by recorder)"
  "Open an accounting register form":
    prefix: "OpenForm27"
    body: "OpenForm(\"AccountingRegister.${1:ChooseAnAccountingRegister}.${2:ChooseForm}$0\");"
    description: "Open an accounting register form"
  "Open an accounting register form (with parameters)":
    prefix: "OpenForm28"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("AccountingRegister.${1:ChooseAnAccountingRegister}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open an accounting register form (with parameters)"
  "Get an accounting register form":
    prefix: "GetForm27"
    body: "GetForm(\"AccountingRegister.${1:ChooseAnAccountingRegister}.${2:ChooseForm}$0\");"
    description: "Get an accounting register form"
  "Get an accounting register form (with parameters)":
    prefix: "GetForm28"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("AccountingRegister.${1:ChooseAnAccountingRegister}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get an accounting register form (with parameters)"
  "Selection of accounting register records":
    prefix: "AccountingRegisterChoose"
    body: '''
      Selection = AccountingRegister.${1:ChooseAnAccountingRegister}.Choose();
      While Selection.Next() Do
      	$0
      EndDo;
    '''
    description: "Selection of accounting register records"
  "Selection of accounting register records (by recorder)":
    prefix: "AccountingRegisterSelectByRecorder"
    body: '''
      Selection = AccountingRegister.${1:ChooseAnAccountingRegister}.SelectByRecorder($0);
      While Selection.Next() Do
      EndDo;
    '''
    description: "Selection of accounting register records (by recorder)"
  "Open a calculation register form":
    prefix: "OpenForm29"
    body: "OpenForm(\"CalculationRegister.${1:ChooseACalculationRegister}.${2:ChooseForm}$0\");"
    description: "Open a calculation register form"
  "Open a calculation register form (with parameters)":
    prefix: "OpenForm30"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      OpenForm("CalculationRegister.${1:ChooseACalculationRegister}.${2:ChooseForm}", FormParameters);
    '''
    description: "Open a calculation register form (with parameters)"
  "Get a calculation register form":
    prefix: "GetForm29"
    body: "GetForm(\"CalculationRegister.${1:ChooseACalculationRegister}.${2:ChooseForm}$0\");"
    description: "Get a calculation register form"
  "Get a calculation register form (with parameters)":
    prefix: "GetForm30"
    body: '''
      FormParameters = New Structure;
      FormParameters.Insert("$0", );
      Form = GetForm("CalculationRegister.${1:ChooseACalculationRegister}.${2:ChooseForm}", FormParameters);
    '''
    description: "Get a calculation register form (with parameters)"
  "Selection of calculation register records":
    prefix: "CalculationRegisterChoose"
    body: '''
      Selection = CalculationRegister.${1:ChooseACalculationRegister}.Choose();
      While Selection.Next() Do
      	$0
      EndDo;
    '''
    description: "Selection of calculation register records"
  "Selection of calculation register records (by recorder)":
    prefix: "CalculationRegisterSelectByRecorder"
    body: '''
      Selection = CalculationRegister.${1:ChooseACalculationRegister}.SelectByRecorder($0);
      While Selection.Next() Do
      EndDo;
    '''
    description: "Selection of calculation register records (by recorder)"
  Message:
    prefix: "Message"
    body: '''
      Message = New UserMessage;
      Message.Text = "$0";
      Message.Field = "";
      Message.SetData();
      Message.Message();
    '''
    description: "Message"
  DoMessageBox:
    prefix: "DoMessageBox"
    body: "DoMessageBox($0);"
    description: "DoMessageBox"
  Format:
    prefix: "Format"
    body: "Format($0, \"$1\")"
    description: "Format"
  "Create a structure":
    prefix: "Structure"
    body: "New Structure(\"$0\", )"
    description: "Create a structure"
  Query:
    prefix: "Query"
    body: '''
      Query = New Query;
      Query.Text = "$1";
      Result = Query.Execute();
      Selection = Result.Choose();
      While Selection.Next() Do
        $0
      EndDo;
    '''
    description: "Query"
  "Query with parameter":
    prefix: "Query2"
    body: '''
      Query = New Query;
      Query.Text = "$1";
      Query.SetParameter("$0", );
      Result = Query.Execute();
      Selection = Result.Choose();
      While Selection.Next() Do
      EndDo;
    '''
    description: "Query with parameter"
  Promt:
    prefix: "DoQueryBox"
    body: "DoQueryBox(\"${1:PromptText}\", ${2:DialogPrompt})"
    description: "Promt"
  "Conditional Prompt":
    prefix: "DoQueryBox2"
    body: "DoQueryBox(\"${1:PromptText}\", ${2:DialogPrompt}) = ${3:DialogReturnCode}"
    description: "Conditional Prompt"
  "Type check":
    prefix: "TypeCheck"
    body: '''
      If TypeOf(${1:ExpressionForTypeCheck}) = Type("${2:ChooseType}") Then
      	$0
      EndIf;
      
    '''
    description: "Type check"