'scopeName': 'source.1c'
'name': '1C'
'fileTypes': [
  'bsl'
  'os'
]
'patterns': [
  {
    'name': 'comment.line.double-slash.1c'
    'match': '(\\/\\/.*\\n)'
  },
  {
    'name': 'constant.language.1c'
    'match': '\\b(Неопределено|Истина|Ложь|NULL)\\b'
  },
  {
    'name': 'entity.name.function.1c'
    'match': '(?<=Процедура|Функция)[^\\(]*'
  },
  {
    'name': 'string.quoted.double.1c'
    'match': '("[^"]*")'
  },
  {
    'name': 'storage.type.1c'
    'match': '\\b(Процедура|Функция|КонецПроцедуры|КонецФункции)\\b'
  },
  {
    'name': 'storage.modifier.1c'
    'match': '\\b(Знач|Экспорт)\\b'
  },
  {
    'name': 'keyword.control.1c'
    'match': '\\b(Прервать|Продолжить|Возврат)\\b'
  },
  {
    'name': 'keyword.control.conditional.1c'
    'match': '\\b(Если|Иначе|ИначеЕсли|Тогда|КонецЕсли)\\b'
  },
  {
    'name': 'keyword.control.exception.1c'
    'match': '\\b(Попытка|Исключение|КонецПопытки|ВызватьИсключение)\\b'
  },
  {
    'name': 'keyword.control.repeat.1c'
    'match': '\\b(Пока|Для (Каждого)?|Из|По|Цикл|КонецЦикла)\\b'
  },
  {
    # не работает
    'name': 'keyword.operator.logical.1c'
    'match': '\\b(НЕ|И|ИЛИ)\\b'
  },
  {
    'name': 'keyword.operator.comparison.1c'
    'match': '<\\=|>\\=|\\=|<|>'
  },
  {
    'name': 'keyword.operator.arithmetic.1c'
    'match': '\\+|\\-|\\*|\\/|%'
  },
  {
    'name': 'keyword.operator.assignment.1c'
    'match': '\\='
  },
  {
    # вероятно, тоже не работает
    'name': 'keyword.operator.1c'
    'match': '(;)|\\b(Перем|Новый)\\b'
  },
  {
    'name': 'variable.parameter.1c'
    'match': '\\b((?<=Знач)[^[,\)=]]*)\\b'
  },
  {
    'name': 'constant.numeric.1c'
    'match': '\\b(\\h{8}-(\\h{4}-){3}\\h{12})|(\\d)+\\b'
  }
]
